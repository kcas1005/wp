커널코드 분석

https://velog.io/@bensworks/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%EB%8F%84%EC%A0%84%EA%B8%B05-%ED%99%94%EB%A9%B4-%EC%84%A4%EA%B3%84

제1절 UI요구사향 확인
    1. UI 표준
    2. UI 지침
    3. 스토리보드

강의 교안 8장 인터페이스
    1절 인터페이스의 역할
        인터페이스란?



3대 회사1
웹프로그래밍
보안쪽
클라우드
서밋

#기술스택
@java 버전관리 (패스 저장, jvm 돌아가는 방식)
    시스템 환경변수로 각 자바가 설치되어있는 경로에 Path를 주면 Path 경로에 있는 버전에 맞는 자바가 실행됨

    long term support(LTS) 3년마다 개발
    자바 8
        람다 표현식
        Stream 스레드 2~3개를 사용해서 for문 보다 빠름
        인터페이스 - default
        optional 래퍼클래스

    자바 11
        스트링, 파일
        람다를 var 키워드로 사용
        Httpclient

    선생님 답
        >JAVA 17버전(jdk)과 11버전(jre) 두 가지로 버전 관리하면서 프로토타입으로 17버전을 사용하여 개발
        >JVM구조를 이해하고 코드 튜닝에 대한 깊은 관심을 갖고 공부
        -JAVA_HOME변수로 여러 버전의 java를 관리
        -jvm -실무진 합격은 했으나, 연봉협상할 때 어필. jvm(자바코드를 바이트코드로 변환)
        -jvm을 돌아가는 방식 어필(컴파일과 스택에 대해 이해)   
        -jvm을 돌아가는 방식 어필(컴파일과 스택에 대해 이해)
        (자바 바이트코드를 명령어 단위로 읽어서 해석 + JIT 캐시 저장 + GC 모듈)

@메모리와 기본타입, 참조타입(상수풀, stringbuffer...)

    스택 영역에는 상수 값을 저장함

    참조타입은 배열,클래스,인터페이스(위치에 대한 정보)

    선생님 답
        >아키텍처 : 프로그래밍의 설계 (집 - 기본골조)
        >프로젝트를 설계단계에서 아키텍처에 대한 고민을 통한 메모리 설계를 중점으로 개발
        >메모리와 연산속도에 대한 고민으로 프로젝트 -- 개발

        -기본타입과 참조타입의 메모리 할당 고려한 아키텍쳐 설계
        -string 수정이 빈번할 경우 stringbuffer사용

@클래스와 객체형변환

    객체간의 타입변환
        부모가 상속 받은 자식을 참조값으로 불러오는거 up-casting
        자식이 부모를 참조값으로 불러오는거 down-casting

    선생님 답
        >하나의 클래스를 효율적으로 사용하기 위해 객체지향 상속에 --
        >새로 배운 객체지향 기술을 응용하여 기존 클래스의 코드 지속적 리팩토링(ex)인터페이스를 활용한 모듈 생성
        - 클래스 다양하게 생성과 객체형변환 (구조설계를 유연하게 변화하여 응용능력)

@상속, 추상메서드, 인터페이스
부모에서 자식으로 단일 상속으로 받고 클래스를 확장합니다.
추상메서드는 클래스를 확장확장하는 개념으로 선언만 할 수있습니다.
인터페이스는 상속을 받지만 여러 클래스에서 받을 수 있고 선언만 할 수 있습니다.

    선생님 답
        >인터페이스의 구조설계를 통해 솔루션의 명시적 방향을 제시
        >솔류션의 기능적 유지보수를 위해 인터페이스 활용(로그인 정보, 유저정보 조회)
        -- 프로젝트 > 인터페이스를 구체적으로 어떤 내용의 솔루션 설계를 제시하는가?
        - 자식클래스에서만 구현가능한 추상클래스(형변환으로 부모클래스로 변환 가능)
        - 인터페이스를 통한 강제성과 다중상속 (인터페이스를 통해 강제성 어필)